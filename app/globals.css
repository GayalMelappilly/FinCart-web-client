@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

html {
  scroll-behavior: smooth;
}

/* Main */

@layer base {
  :root {
    --color-gold: #D4AF37;
  }
  
  body {
    @apply antialiased text-gray-100;
  }
}

@layer utilities {
  .text-gold {
    color: var(--color-gold);
  }
  
  .bg-gold {
    background-color: var(--color-gold);
  }
  
  .border-gold {
    border-color: var(--color-gold);
  }
  
  .ring-gold {
    --tw-ring-color: var(--color-gold);
  }
  
  .from-gold {
    --tw-gradient-from: var(--color-gold);
  }
  
  .to-gold {
    --tw-gradient-to: var(--color-gold);
  }
}



/* Shimmer effect */
.skeleton-shimmer {
  background: linear-gradient(90deg, transparent, rgba(226, 232, 240, 0.8), transparent);
  background-size: 200% 100%;
  animation: shimmer 2s infinite linear;
}

@keyframes shimmer {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* Pulse animation for the icon container */
.skeleton-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: .7;
    transform: scale(0.95);
  }
}

/* Progress bar animation */
.skeleton-progress {
  width: 0%;
  border-radius: 9999px;
  animation: progress 2.5s ease-in-out infinite;
}

@keyframes progress {
  0% {
    width: 0%;
    opacity: 0.7;
  }
  50% {
    width: 70%;
    opacity: 0.9;
  }
  100% {
    width: 100%;
    opacity: 0.7;
  }
}

/* Add this to your global CSS file or create a separate skeleton.css file */

/* Shimmer animation */
@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.animate-shimmer {
  animation: shimmer 1.5s ease-in-out infinite;
}

/* Staggered animation delays */
.animation-delay-100 {
  animation-delay: 100ms;
}

.animation-delay-200 {
  animation-delay: 200ms;
}

.animation-delay-300 {
  animation-delay: 300ms;
}

.animation-delay-400 {
  animation-delay: 400ms;
}

.animation-delay-500 {
  animation-delay: 500ms;
}

.animation-delay-600 {
  animation-delay: 600ms;
}

.animation-delay-700 {
  animation-delay: 700ms;
}

/* Smooth pulse animation for better UX */
@keyframes smoothPulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

.animate-smooth-pulse {
  animation: smoothPulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Breathing animation for a more organic feel */
@keyframes breathe {
  0%, 100% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.02);
    opacity: 0.6;
  }
}

.animate-breathe {
  animation: breathe 3s ease-in-out infinite;
}

/* Wave animation for progressive loading */
@keyframes wave {
  0% {
    transform: translateX(-100%);
  }
  50% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.animate-wave {
  position: relative;
  overflow: hidden;
}

.animate-wave::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.6),
    transparent
  );
  animation: wave 1.5s infinite;
}

/* Tailwind custom utilities - add to tailwind.config.js */
/*
module.exports = {
  theme: {
    extend: {
      animation: {
        'shimmer': 'shimmer 1.5s ease-in-out infinite',
        'smooth-pulse': 'smoothPulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',
        'breathe': 'breathe 3s ease-in-out infinite',
        'wave': 'wave 1.5s infinite',
      },
      keyframes: {
        shimmer: {
          '0%': { backgroundPosition: '-200% 0' },
          '100%': { backgroundPosition: '200% 0' },
        },
        smoothPulse: {
          '0%, 100%': { opacity: '1' },
          '50%': { opacity: '0.7' },
        },
        breathe: {
          '0%, 100%': { transform: 'scale(1)', opacity: '0.8' },
          '50%': { transform: 'scale(1.02)', opacity: '0.6' },
        },
        wave: {
          '0%': { transform: 'translateX(-100%)' },
          '50%': { transform: 'translateX(100%)' },
          '100%': { transform: 'translateX(100%)' },
        },
      },
      backgroundSize: {
        '200%': '200%',
      },
    },
  },
}
*/